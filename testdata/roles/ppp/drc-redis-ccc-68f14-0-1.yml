apiVersion: v1
kind: Pod
metadata:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "9100"
    prometheus.io/scrape: "true"
  creationTimestamp: "2022-02-25T07:41:48Z"
  generateName: drc-redis-ccc-68f14-0-
  labels:
    AppName: redis-ccc-68f14
    CreatedBy: woqutech.com
    DBBranch: redis5.0
    DBRole: slave
    DBType: redis
    IsMaster: "false"
    Name: redis-ccc-68f14
    ResourceUseType: share
    SetName: drc-redis-ccc-68f14-0
    TenantId: 847798ee3db44716b6357b04e5a55c16
    Type: DatabaseType
    controller-revision-hash: drc-redis-ccc-68f14-0-795c66d45
    managed-by: redis-cluster-operator
    qfr.type: QfrCluster
    redis.kun/name: redis-ccc-68f14
    redis.resource.type: server
    statefulSet: drc-redis-ccc-68f14-0
    statefulset.kubernetes.io/pod-name: drc-redis-ccc-68f14-0-1
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:prometheus.io/path: {}
          f:prometheus.io/port: {}
          f:prometheus.io/scrape: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:AppName: {}
          f:CreatedBy: {}
          f:DBBranch: {}
          f:DBType: {}
          f:ResourceUseType: {}
          f:TenantId: {}
          f:controller-revision-hash: {}
          f:managed-by: {}
          f:qfr.type: {}
          f:redis.kun/name: {}
          f:redis.resource.type: {}
          f:statefulSet: {}
          f:statefulset.kubernetes.io/pod-name: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"730a6e23-f5c3-439a-9e4e-380f45dcfb23"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution:
              .: {}
              f:nodeSelectorTerms: {}
        f:containers:
          k:{"name":"exporter"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"REDIS_PASSWORD"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef:
                    .: {}
                    f:key: {}
                    f:name: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":9100,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
          k:{"name":"redis"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"POD_IP"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef:
                    .: {}
                    f:apiVersion: {}
                    f:fieldPath: {}
              k:{"name":"REDIS_PASSWORD"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef:
                    .: {}
                    f:key: {}
                    f:name: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:lifecycle:
              .: {}
              f:postStart:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
              f:preStop:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
            f:livenessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":6379,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
              k:{"containerPort":16379,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:limits:
                .: {}
                f:cpu: {}
                f:memory: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/conf"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/data"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostname: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:subdomain: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"conf"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"redis-data"}:
            .: {}
            f:name: {}
            f:persistentVolumeClaim:
              .: {}
              f:claimName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2022-02-25T07:41:48Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:nodeName: {}
      f:status:
        f:conditions:
          .: {}
          k:{"type":"PodScheduled"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-scheduler
    operation: Update
    time: "2022-02-25T07:41:48Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.244.0.125"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    time: "2022-02-25T07:42:28Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          f:DBRole: {}
          f:IsMaster: {}
          f:Name: {}
          f:SetName: {}
          f:Type: {}
    manager: webserver
    operation: Update
    time: "2022-02-25T07:42:32Z"
  name: drc-redis-ccc-68f14-0-1
  namespace: qfusion-admin
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: drc-redis-ccc-68f14-0
    uid: 730a6e23-f5c3-439a-9e4e-380f45dcfb23
  resourceVersion: "275266"
  selfLink: /api/v1/namespaces/qfusion-admin/pods/drc-redis-ccc-68f14-0-1
  uid: 403d204a-4c80-40df-99d7-b4abf16b747f
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: qfusion/node
            operator: Exists
  containers:
  - command:
    - /conf/fix-ip.sh
    - redis-server
    - /conf/redis.conf
    - --cluster-enabled yes
    - --cluster-config-file /data/nodes.conf
    - --requirepass '$(REDIS_PASSWORD)'
    - --masterauth '$(REDIS_PASSWORD)'
    - --rename-command BGREWRITEAOF www07fko
    - --rename-command BGSAVE pp14qluk
    - --rename-command CONFIG lni07z1p
    - --rename-command DEBUG 8a4insyv
    - --rename-command SAVE 6on30p6z
    - --rename-command SHUTDOWN dvui0opr
    - --rename-command SLAVEOF xwxvcw36
    env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: redis-sec-redis-ccc-68f14
    image: k8smaster.qfusion.irds/irds/redis:5.0.4-alpine
    imagePullPolicy: IfNotPresent
    lifecycle:
      postStart:
        exec:
          command:
          - /bin/sh
          - -c
          - echo ${REDIS_PASSWORD} > /data/redis_password
      preStop:
        exec:
          command:
          - /bin/sh
          - /conf/shutdown.sh
    livenessProbe:
      exec:
        command:
        - sh
        - -c
        - redis-cli -h $(hostname) ping
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: redis
    ports:
    - containerPort: 6379
      name: client
      protocol: TCP
    - containerPort: 16379
      name: gossip
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - sh
        - -c
        - redis-cli -h $(hostname) ping
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      limits:
        cpu: 250m
        memory: 2Gi
      requests:
        cpu: 125m
        memory: 2Gi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /data
      name: redis-data
    - mountPath: /conf
      name: conf
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-n6q2x
      readOnly: true
  - args:
    - --web.listen-address=:9100
    - --web.telemetry-path=/metrics
    env:
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: redis-sec-redis-ccc-68f14
    image: k8smaster.qfusion.irds/irds/redis-exporter:v3.11.1
    imagePullPolicy: IfNotPresent
    name: exporter
    ports:
    - containerPort: 9100
      name: prom-http
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-n6q2x
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: drc-redis-ccc-68f14-0-1
  nodeName: 172-16-130-26
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  subdomain: redis-ccc-68f14-0
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: redis-data
    persistentVolumeClaim:
      claimName: redis-data-drc-redis-ccc-68f14-0-1
  - configMap:
      defaultMode: 493
      name: redis-cluster-redis-ccc-68f14
    name: conf
  - name: default-token-n6q2x
    secret:
      defaultMode: 420
      secretName: default-token-n6q2x
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2022-02-25T07:41:49Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2022-02-25T07:42:28Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2022-02-25T07:42:28Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2022-02-25T07:41:49Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://9aae5079116715e60ade52b82a49ea1539c5f412fda2576ceda310a16e3a2e29
    image: k8smaster.qfusion.irds/irds/redis-exporter:v3.11.1
    imageID: docker-pullable://k8smaster.qfusion.irds/irds/redis-exporter@sha256:f3f51453e4261734f08579fe9c812c66ee443626690091401674be4fb724da70
    lastState: {}
    name: exporter
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2022-02-25T07:41:56Z"
  - containerID: docker://721a53f3bb6b1d10cd2f7da581bd9feff8664c60ee6eef11f0ee24abc66c7ac0
    image: k8smaster.qfusion.irds/irds/redis:5.0.4-alpine
    imageID: docker-pullable://k8smaster.qfusion.irds/irds/redis@sha256:8205a681aa6eea2b0c27249894def02a14ff2cbe9fc78e83d62ad04d1180deb9
    lastState: {}
    name: redis
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2022-02-25T07:41:56Z"
  hostIP: 10.10.40.26
  phase: Running
  podIP: 10.244.0.125
  podIPs:
  - ip: 10.244.0.125
  qosClass: Burstable
  startTime: "2022-02-25T07:41:49Z"
